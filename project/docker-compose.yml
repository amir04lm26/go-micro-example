services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1


  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=123456 dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    # ports:
    #   - "8082:80" // NOTE: We don't need ports as we do not want to expose our service
    deploy:
      mode: replicated
      replicas: 1

    
  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog # match with the mailhog service name
      MAIL_PORT: 1025
      MAIL_USERNAME: none
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: ""
      MAIL_FROM_NAME: "John Smith"
      MAIL_FROM_ADDRESS: john.smith@example.come


  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1


  postgres:
    image: "postgres:17.4"
    ports: 
      -  "5433:5432" 
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/


  mongo:
    image: "mongo:8.0.8"
    ports:
      - "27018:27017"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    volumes:
      - ./db-data/mongo/:/data/db

  # Simulates a mail server
  mailhog:
    image: "mailhog/mailhog:v1.0.1"
    ports:
      - "1025:1025" # Port 1025 (SMTP)
      - "8025:8025" # Port 8025 (Web UI)


  rabbitmq:
    image: "rabbitmq:4.1.0-management-alpine"
    ports:
      - "5672:5672"   # Port 5672  (AMQP)
      - "15672:15672" # Port 15672 (Management Console)
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: 123456
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
